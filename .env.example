# Aura App - Environment Variables Template
# Copy this file to .env.local and fill in your actual values
# NEVER commit .env.local to git - it should contain sensitive data

# =============================================================================
# ENVIRONMENT CONFIGURATION
# =============================================================================

# Environment type (development/staging/production)
NODE_ENV=development

# Application version
APP_VERSION=1.0.0

# Enable security audit logging (true/false)
SECURITY_AUDIT_ENABLED=true

# =============================================================================
# SUPABASE CONFIGURATION
# =============================================================================

# Frontend - Supabase connection (publicly accessible)
EXPO_PUBLIC_SUPABASE_URL=http://localhost:54321
EXPO_PUBLIC_SUPABASE_ANON_KEY=your-supabase-anon-key-here

# Backend - Supabase service role (server-side only)
SUPABASE_URL=http://localhost:54321
SUPABASE_SERVICE_ROLE_KEY=your-supabase-service-role-key-here

# =============================================================================
# API CONFIGURATION
# =============================================================================

# Frontend API URL
EXPO_PUBLIC_API_URL=http://localhost:3000

# Database connection string
DATABASE_URL=postgresql://postgres:postgres@localhost:54322/postgres

# Optional: Redis URL for caching (fallback to in-memory if not provided)
REDIS_URL=redis://localhost:6379

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# Device identification peppers (MUST be different and secure)
# Frontend pepper for device fingerprinting (publicly accessible)
EXPO_PUBLIC_DEVICE_PEPPER=generate-secure-random-64-chars-here-frontend

# Backend pepper for server-side device hash validation (server-side only)
DEVICE_HASH_PEPPER=generate-secure-random-64-chars-here-backend

# NextAuth secret for JWT signing (minimum 32 characters)
NEXTAUTH_SECRET=generate-secure-random-64-chars-here-nextauth

# =============================================================================
# UX CONFIGURATION
# =============================================================================

# Cultural detection and localization
EXPO_PUBLIC_CULTURAL_DETECTION_ENABLED=true

# Default stealth mode setting (false = normal UI by default)
EXPO_PUBLIC_STEALTH_MODE_DEFAULT=false

# Accessibility: Period Absence Alert system
EXPO_PUBLIC_ACCESSIBILITY_PAA_ENABLED=true

# Animation preferences (respects user's system preferences)
EXPO_PUBLIC_ANIMATION_REDUCED_MOTION=false

# =============================================================================
# SECURITY HEADERS CONFIGURATION
# =============================================================================

# CORS allowed origins (comma-separated list)
CORS_ORIGIN=http://localhost:3000,http://localhost:19006

# Optional: CSP violation report URI
# CSP_REPORT_URI=https://your-csp-report-endpoint.com/report

# =============================================================================
# DEVELOPMENT-SPECIFIC SETTINGS
# =============================================================================

# Local development URLs for Supabase
# After running 'supabase start', use these URLs:
# - API URL: http://localhost:54321
# - DB URL: postgresql://postgres:postgres@localhost:54322/postgres
# - Studio URL: http://localhost:54323
# - Inbucket URL: http://localhost:54324
# - JWT secret: copy from 'supabase status' output
# - Anon key: copy from 'supabase status' output
# - Service role key: copy from 'supabase status' output

# =============================================================================
# REQUIRED SECRETS GENERATION
# =============================================================================

# To generate secure random values, run in your terminal:
# 
# For EXPO_PUBLIC_DEVICE_PEPPER:
# node -e "console.log(require('crypto').randomBytes(48).toString('base64'))"
#
# For DEVICE_HASH_PEPPER:
# node -e "console.log(require('crypto').randomBytes(48).toString('base64'))"
#
# For NEXTAUTH_SECRET:
# node -e "console.log(require('crypto').randomBytes(48).toString('base64'))"
#
# Or use the development utility:
# pnpm nx run utils:generate-secrets

# =============================================================================
# VARIABLE DESCRIPTIONS
# =============================================================================

# EXPO_PUBLIC_* variables are accessible in the frontend React Native app
# All other variables are server-side only and not exposed to the client
# 
# Security-critical variables:
# - DEVICE_HASH_PEPPER: Used for server-side device identification validation
# - EXPO_PUBLIC_DEVICE_PEPPER: Used for client-side device fingerprinting
# - NEXTAUTH_SECRET: Used for JWT token signing and validation
# - SUPABASE_SERVICE_ROLE_KEY: Full database access - keep secure!
#
# UX variables:
# - Cultural detection automatically adapts UI based on user locale
# - Stealth mode provides discrete UI for sensitive environments
# - PAA system helps users track period patterns for health insights
# - Animation settings respect accessibility preferences